package Lesson5.constructor;

public class ConceptMethod {

    // METHOD
        // отображает поведение класса, его состояние
        // если рассмотреть в рамках того, что у нас есть какая-то машина, то
        // метод - это то, как набирает скорость машина, как ездит машина, это действия
        // метод обрабатывает наши переменные, производит какие-либо действия, и на выходе даёт результат
        // input метода (параметры метода) - это то, что приходит на вход, что будет обрабатывать метод
        // output метода - это результат обработки, выполнения действий над входными данными

        // СТРУКТУРА МЕТОДА
        // public static void main(String[] args) {our code}
        // public - access modifier
        // static - non-access modifier(s)
        // void - return type (то, что возвращает нам метод, output метода, обязательный элемент)
        // main - имя метода (обязательный элемент)
        // (String [] args) - parameter(s) (то, что в скобках, сами круглые скобки являются обязательным
        // элементом. Можно не писать памаметры в круглых скобках, а можно писать 1, 2, сколько угодно)
        // {our code} - body (описываем всю функциональность метода, обязательный элемент)

        // правило Lifo для стека: "Last in - First out"

        // создание метода
        int summa(int a, int b, int c){     // здесь в круглых скобках параметры
            int result = a + b + c;
            return result;  // тип int, совпадает с тем, что мы определяли для output в начале (int summa)
            // после return ничего не должно быть, иначе ошибка компиляции
            // в данном случае мы просто описали логику
            }
    int sredneeArifm(int a1, int b1, int c1){
        int result2 = summa(a1, b1, c1)/3;
        return result2;
        }
    }

    class Sum2 {
        public static void main(String[] args) {
            // поскольку мы хотим вызвать метод из другого класса, мы должны создать объект
            ConceptMethod t = new ConceptMethod();

            // вызов метода
            // если напишем t.summa(1, 2, 3);  то ничего не увидим, поскольку мы нигде не указывали,
            // что сумма должна быть выведена на экране, но метод обработался
            int summaTrexChisel = t.summa(4, 5, 6);
            System.out.println(summaTrexChisel);
            System.out.println(t.summa(3, 4, 5));
            // здесь в круглых скобках аргументы (значения параметров)

            System.out.println(t.sredneeArifm(20, 40, 60));
        }
    }
